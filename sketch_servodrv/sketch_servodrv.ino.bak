#include "Arduino.h"
#include <Wire.h>
#include <adafruit_pwmservodriver.h>

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
#define SERVOMIN 150
#define SERVOMAX 600

const byte GRIPPER = 0;
// Here should be axle later on
const byte NECK = 1;
const byte WAIST = 2;
const byte LEGS = 3;
const byte BASE = 4;

const int SRV_COUNT = 5;

// Initially robot arm does nothing
char srvCmd[SRV_COUNT] = {'n', 'n', 'n', 'n', 'n'};
// Servos position by default
int srvDef[SRV_COUNT] = {80, 30, -1, 100, 100};
int srvPos[SRV_COUNT];
// Utmost positions of servos
const int srvMax[SRV_COUNT] = {80, 180, -1, 150, 180};
const int srvMin[SRV_COUNT] = {0, 0, -1, 20, 0};

void setup() {
  Serial.begin(9600);
  Serial.setTimeout(5000);
  Serial.println("ServoDriver");
  Serial.println("Setting up hardware .....");
  pwm.begin();
  pwm.setPWMFreq(60);
  Serial.println("Setting servos by default ...");
  for (int i = 0; i < SRV_COUNT; i++)
    goToDef(i);
  Serial.println("............... completed");
}

void loop() {
  moveSrv(GRIPPER);
  moveSrv(NECK);
  // Dangerous servo:
  // moveLimb(WAIST);
  moveSrv(LEGS);
  moveSrv(BASE);
  delay(20);
}

void goToDef(byte srv) {
  srvPos[srv] = srvDef[srv];
  int pulseLength = map(srvDef[srv], 0, 180, SERVOMIN, SERVOMAX);
  pwm.setPWM(srv, 0, pulseLength);
}

void setSrv(byte srv, int value) {
  if (value > srvMax[srv] or value < srvMin[srv]) {
    srvCmd[srv] = 'n';
    return;
  }
  srvPos[srv] = value;
  int pulseLength = map(value, 0, 180, SERVOMIN, SERVOMAX);
  pwm.setPWM(srv, 0, pulseLength);
}

void moveSrv(byte srv) {
  if (srvCmd[srv] == 'd') {
    srvCmd[srv] == 'n';
    goToDef(srv);
    return;
  }
  
  if (srvCmd[srv] == 'r')
    setSrv(srv, srvPos[srv] + 1);
  else if (srvCmd[srv] == 'l')
    setSrv(srv, srvPos[srv] - 1);
  else if (srvCmd[srv] == 'n')
    ;// Do nothing
  else
    Serial.println("Invalid package data!");
}

void serialEvent() {
  while (Serial.available() > 0) {
    int k = Serial.readBytes(srvCmd, SRV_COUNT);
    if (k == 0) {
      Serial.println("Insufficient number of received bytes");
      for (int i = 0; i < SRV_COUNT; i++)
        srvCmd[i] = 'n';
      break;
    }
  }
}
